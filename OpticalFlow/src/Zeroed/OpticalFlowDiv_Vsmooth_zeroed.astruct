package Zeroed;

import derivative.Derivative;
import smooth_d.Smooth_d;
import outer_product.Outer_Product;
import smooth_op.Smooth_OP;
import velocity.Velocity;
//import smooth_v.Smooth_V;

const boolean match_roger = true;
interface OpticalFlowDiv_Vsmooth_zeroed
{
	inbound in;
	outbound Vx;
	outbound Vy;
	
	property int width;
	property int height;
}
binding aOpticalFlow implements OpticalFlowDiv_Vsmooth_zeroed
{
	Derivative dx_dy_dt = {width=width, height=height, match_roger=match_roger};
	//just lost edge pixels w-4
	Smooth_d smooth_t_dx = {width=width-4, height=height-4, controller_port=0, match_roger=match_roger};
	Smooth_d smooth_t_dy = {width=width-4, height=height-4, controller_port=1, match_roger=match_roger};
	Smooth_d smooth_t_dt = {width=width-4, height=height-4, controller_port=2, match_roger=match_roger};
	//lost some more edge pixels width-8
	Outer_Product outer_product = { match_roger = match_roger};
	Smooth_OP smooth_op_g_xx={width=width-8, height=height-8, match_roger=match_roger};
	Smooth_OP smooth_op_g_xy={width=width-8, height=height-8, match_roger=match_roger};
	Smooth_OP smooth_op_g_xt={width=width-8, height=height-8, match_roger=match_roger};
	Smooth_OP smooth_op_g_yy={width=width-8, height=height-8, match_roger=match_roger};
	Smooth_OP smooth_op_g_yt={width=width-8, height=height-8, match_roger=match_roger};
	Smooth_OP smooth_op_g_tt={width=width-8, height=height-8, match_roger=match_roger};
	//lost some more now width-10,height-10
	Velocity velocity = { match_roger = match_roger};
	//Smooth_V smooth_v_x={width=width-10, height=height-10};
	//Smooth_V smooth_v_y={width=width-10, height=height-10};
	//final should be width=16 height-16
	channel c0 = {in,dx_dy_dt.in};
	channel c1 = {dx_dy_dt.dx_out, smooth_t_dx.in};
	channel c2 = {dx_dy_dt.dy_out, smooth_t_dy.in};
	channel c3 = {dx_dy_dt.dt_out, smooth_t_dt.in};
	channel c4 = {smooth_t_dx.out, outer_product.dx_smooth};
	channel c5 = {smooth_t_dy.out, outer_product.dy_smooth};
	channel c6 = {smooth_t_dt.out, outer_product.dt_smooth};
	
	channel c7 = {outer_product.g_xx, smooth_op_g_xx.in};
	channel c8 = {outer_product.g_xy, smooth_op_g_xy.in};
	channel c9 = {outer_product.g_xt, smooth_op_g_xt.in};
	channel c10 = {outer_product.g_yy, smooth_op_g_yy.in};
	channel c11 = {outer_product.g_yt, smooth_op_g_yt.in};
	channel c12 = {outer_product.g_tt, smooth_op_g_tt.in};
	
	channel c13 = {smooth_op_g_xx.out, velocity.g_xx_smooth};
	channel c14 = {smooth_op_g_xy.out, velocity.g_xy_smooth};
	channel c15 = {smooth_op_g_xt.out, velocity.g_xt_smooth};
	channel c16 = {smooth_op_g_yt.out, velocity.g_yt_smooth};
	channel c17 = {smooth_op_g_yy.out, velocity.g_yy_smooth};
	channel c18 = {smooth_op_g_tt.out, velocity.g_tt_smooth};
	
	channel c19 = {velocity.Vx, Vx};
	channel c20 = {velocity.Vy, Vy};

}
