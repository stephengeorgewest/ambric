package opticalFlowTop;

import astruct.pcie.Vio;
//import astruct.primitives.Source;
import derivative.source_x_y_t;
import astruct.primitives.Sink;

//import astruct.debug_master.DebugMaster;
//import astruct.pcie.Vio;

const int width = 316;
const int height = 252;

interface Root{}

design OpticalFlowTop
{
	Root root;
	options {
//		architecture = Architecture.AM2045,
		image=Image.PCIE,
		board=Board.IDB
	} on root;
}
binding cRoot implements Root
{
	Vio vio = {numSources=0, numSinks=0};
	//DebugMaster dm={transport=IOTransport.USB};
	
	source_x_y_t source = {width=width, height=height};
	Sink Vx_sink;
	Sink Vy_sink;
	
	OpticalFlow opticalflow={width=width, height=height};
	
	channel c0 = {source.out,opticalflow.in};
	//channel c0 = {vio.out[0],opticalflow.in};
	
	
	channel c21 = {opticalflow.Vx, Vx_sink.in};
	channel c22 = {opticalflow.Vy, Vy_sink.in};
}