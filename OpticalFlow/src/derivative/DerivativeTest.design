package derivative;

import astruct.pcie.Vio;


const int width = 316;//problems with swift caused by to big something here
const int height = 252;
const boolean match_roger = true	;

interface RootTest{}

design DerivativeTest
{
	RootTest root;
	options {
//		architecture = Architecture.AM2045,
		image=Image.PCIE,
		board=Board.IDB
	} on root;
}
binding cRoot implements RootTest
{
	Vio vio = {numSources=1, numSinks=3, doDataExtent=false};

	Derivative d = {width=width, height=height, match_roger=match_roger};
	//D_split d = {width=width, height=height};
	channel c0 = {vio.out[0],d.in};

	channel ca = {d.dx_out, vio.in[0]};
	channel cb = {d.dy_out, vio.in[1]};
	channel cc = {d.dt_out, vio.in[2]};

}
