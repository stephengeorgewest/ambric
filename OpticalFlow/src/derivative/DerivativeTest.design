package derivative;

import astruct.pcie.Vio;


const int width = 256;//316;
const int height = 2;//252;
const boolean match_roger = false	;

interface RootTest{}

design DerivativeTest
{
	RootTest root;
	options {
//		architecture = Architecture.AM2045,
		image=Image.PCIE,
		board=Board.IDB
	} on root;
}
binding cRoot implements RootTest
{
	Vio vio = {numSources=1, numSinks=3, doDataExtent=false};

	//Derivative d = {width=width, height=height, match_roger=match_roger};
	D_split d = {width=width, height=height};
	channel c0 = {vio.out[0],d.in};

	channel ca = {d.dx, vio.in[0]};
	channel cb = {d.dy, vio.in[1]};
	channel cc = {d.dt, vio.in[2]};

}
