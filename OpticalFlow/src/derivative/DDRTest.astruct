package derivative;

import astruct.io.DDR2;

interface DDRTest
{
	inbound in;
	outbound out;
	
	property int width;
	property int height;
}
binding aDt_w_fifos implements DDRTest
{
	DDR2 ddr = {controller=0, port = 0, size=width*height*5};//w*h*4*5
	DDR_Control control ={width=width, height=height};
	//Dt_ dt;
	
	channel c0 = {in, control.in};
	channel c1 = {control.out, ddr.in};
	//attribute PortTap("ddr_control.ambricFile") on control.out;
	channel c2 = {ddr.out, out};// dt.in};
	//attribute PortTap("dt_in.ambricFile") on dt.in;
	//channel c3 = {dt.out, out};
}
interface DDR_Control
{
	inbound in;
	outbound out;
	
	property int width;
	property int height;
}
binding jDDR_Control implements DDR_Control
{
	implementation "DDR_Control_dt.java";
}