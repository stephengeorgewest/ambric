package derivitive;

import astruct.pcie.Vio;
import astruct.primitives.Sink;



const int width = 316;
const int height = 252;
const boolean match_roger = true;

interface RootTest{}

design DerivitiveTestNo_IO
{
	RootTest root;
	options {
//		architecture = Architecture.AM2045,
		image=Image.PCIE,
		board=Board.IDB
	} on root;
}
binding cRoot implements RootTest
{
	Vio vio = {numSources=0, numSinks=0};
	source_x_y_t source = {width=512, height=1024};
	Derivitive d = {width=width, height=height, match_roger=match_roger};
	Sink dt;
	Sink dy;
	Sink dx;
	channel c0 = {source.out,d.in};

	channel ca = {d.dx_out, dx.in};
	channel cb = {d.dy_out, dy.in};
	channel cc = {d.dt_out, dt.in};

}
