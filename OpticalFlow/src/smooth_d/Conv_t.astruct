package smooth_d;

import astruct.io.DDR2;

interface Conv_t
{
	inbound in;
	outbound out;
	
	property int width;
	property int height;
	property int controller_port;
	property int offset;
}
binding aConv_t implements Conv_t
{
	DDR_Control control = {width=width, height=height, offset=offset};
	DDR2 ddr = {controller=1, port=controller_port};
	Conv_t_kernel kernel;
	
	channel c0 = {in, control.in};
	channel c1 = {control.out, ddr.in};
	channel c2 = {ddr.out, kernel.in};
	channel c3 = {kernel.out, out};
}
interface DDR_Control
{
	inbound in;
	outbound out;
	
	property int width;
	property int height;
	property int offset;
}
binding jDDR_Control implements DDR_Control
{
	implementation "DDR_Control_smooth_d.java";
}
interface Conv_t_kernel
{
	inbound in;
	outbound out;
}
binding jConv_t_kernel implements Conv_t_kernel
{
	implementation "Conv_t.java";
}
