package simpleTestTop;

//import astruct.pcie.Vio;
import lotsOfMath.RunningSum;
import lotsOfMath.Factorial;
import shuffleValues.ShuffleValues;
import writeValues.WriteValues;
import stuff.Split;
import stuff.Join3;


import astruct.primitives.Sink;
import astruct.debug_master.DebugMaster;

interface Root{}
design top
{

	Root Root;
	options {
		//architecture = Architecture.AM2045,
		board=Board.IDB,
		image=Image.PCIE
	} on Root;
}
binding cRoot implements Root
{
	DebugMaster dm={transport=IOTransport.USB};
	
	Sink sink;
	/*Sink sink2;
	Sink sink3;*/
	
	WriteValues values2;
	ShuffleValues shuffle;
	RunningSum add;
	Factorial fact;
	Split split;
	Join3 join;

	WriteValues values;
	channel c0 = {values.out, split.in};
	
	channel ca0 = {split.out_1, add.in };/*add.in};*/
	channel ca2 = {add.out, join.in_1};
	
	channel cb0 = {split.out_2, fact.in};
	channel cb1 = {fact.out, join.in_2};
	
	channel cc0 = {values2.out,shuffle.in};
	channel cc1 = {shuffle.out,  join.in_3};
	
	channel c1 = {join.out, sink.in};
	
	attribute MinimumBuffer(25) on shuffle.out;
}